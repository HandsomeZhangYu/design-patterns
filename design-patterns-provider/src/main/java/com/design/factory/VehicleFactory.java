package com.design.factory;/** * @author Zhang Yu * 静态工厂模式 */public abstract class VehicleFactory {    public enum VehicleType {        /**         * 自行车         */        Bike,        /**         * 汽车         */        Car,        /**         * 卡车         */        Truck;    }    /**     * 创建工厂     *     * @param item     * @return     */    protected abstract Vehicle createVehicle(String item);    public static Vehicle create(VehicleType type) {        switch (type) {            case Car:                return new Car();            case Bike:                return new Bike();            case Truck:                return new Truck();            default:                return null;        }    }    public Vehicle create(String item) {        return createVehicle(item);    }    public static void main(String[] args) {        Vehicle vehicle = VehicleFactory.create(VehicleType.Car);        vehicle.product();    }}